version = 5.0

# Execution Node
project.node = 

# Unique name key of the project
project.name_key = LAB-TESTING-PIPELINE-V3

# Version of the project
project.version = 08042021

# Block on security event : 
# true: for each security gate enabled which has specified failure criteria, if one of failure criteria is triggered, the pipeline will stop as Security Error
# false: even if one of failure criteria is triggered, the pipeline will continue but return as Security Unstable   
project.pipeline.block_on_security_event = false

# Update the running pipeline with the pipeline in the given repository 
# the repository must contain at leat 2 files like on https://git.agile4security.io/fmolina/jenkins-seed-jobs.git
project.update_pipeline.enable = true
project.update_pipeline.repo_url = https://git.agile4security.io/fmolina/jenkins-seed-jobs.git
project.update_pipeline.branch = v3

project.script_utils.repo_url = https://git.agile4security.io/fmolina/script-utils.git
project.script_utils.branch = master

# The main language of the project
project.language.main = node

# The comma-separated secondaries languages field 
project.language.others = js

# Only for Jenkins 
# Not implemented /!\
project.multibranches = false


# Enable this block to build the application
build.application_builder.enable = true
# Use a script containing build instructions or a touchless like mvn or gralde with all required arguments in the next field
# Use those fields to simply build the appliction but also to package it
build.application_builder.touchless_command = npm
build.application_builder.touchless_args = install

# The working directory in the project from which the build will be run
build.application_builder.working_dir = 

# The directory/directories in the project to which artefacts will be saved or pulled from the artefact repository
build.application_builder.target_dir = 

# artifactory
build.artefacts.repository_name = REPO-NAME
build.artefacts.oss_url = https://nexoss.agile4security.io
build.artefacts.api_context = /service/rest
build.artefacts.keep_file_structure = true

# Publish produced artefacts to the specified artefacts repository
# Can only be published on a raw repository
# Not implemented /!\
build.artefacts.publish = false

# Pull specified artefacts from the specified artefacts repository
# Set the name of the needed atefacts
# e.g. for all artefacts in org.apache set org/apache or for a specific package set org/apache/commons/commons-collections4/4.4
# Comma-separated value (myRaw/Repo,org/apache/commons/commons-collections4/4.4)
build.artefacts.pull = 


# Ste all information about the image repository
# the repo name can be empty if the repository is local
build.image.image_repository.repository_name = a4s
build.image.image_repository.image_name = fakedealsback:latest
build.image.image_repository.local = false
build.image.image_repository.url = nexoss.agile4security.io:5000

# If the docker image need to be built via a dockerfile 
build.image.image_builder.docker.dockerfile = true
build.image.image_builder.docker.dockerfile_directory = .

# If the image need to be build with a specific script
build.image.image_builder.docker.image_builder_script = false
build.image.image_builder.docker.script_path = docker/build_image.sh

# Specify how deploy the application
# Using a docker-compose file to deploy a stack
deploy_app.image.docker.compose = false
deploy_app.image.docker.compose_path = docker/docker-compose.yml
# Deploy the app as a standalone and detached container with the docker run command
deploy_app.image.docker.standalone = false
deploy_app.image.docker.standalone_args = 

# After Security gates passed, set to false if the application do not be killed
deploy_app.container.kill_after_test = true

# Set data about the Software Security Center platform
vulnerability_management_platform.ssc.enable = true
vulnerability_management_platform.ssc.url = http://ssc:8080
# All attributes to configure in the SSC project
# Create new attributes in SSC and add it in this properties file as vulnerability_management_platform.ssc.attribute.YourAttributeName
# If your attribute contains spaces in SSC, use the underscore in this properties file
# e.g. In SSC, the attribute name is My Attr then create a new attribute in this file as vulnerability_management_platform.ssc.attribute.My_Attr = value
# The property value is case insensitive, but it must match exactly with the attribute value in SSC
vulnerability_management_platform.ssc.attribute.customer = SOGETI
vulnerability_management_platform.ssc.attribute.scan_process = scan central
vulnerability_management_platform.ssc.attribute.build_type = Imported


# Exclude some files or directories from the analysis
# Comma-separated workspace-relative paths
# Use ant-style paths to exclude all subdirectories (with **) and/or all files (with *)
# e.g. node_modules,path/to/exclude/*.java,**/target/
static_code_analysis.analysis_exclusion.exclude = **/node_modules/**/*

# Enable or disable the SAST Security Gate with Fortify tools
static_code_analysis.fortify.enable = false

# Xmx JVM limit (M for mega, G for giga)
static_code_analysis.fortify.memory_limit = 5G

# Use the building/compiling touchless to list the source files/lib files to Fortify
# In that case and if ScanCentral is enabled, only the Scan phase will be run on ScanCentral worker 
static_code_analysis.fortify.scan_with_touchless = false

# the fortify project directory (can be leave as default)
static_code_analysis.fortify.fortify_project_dir = .fortify

# true to enable the High Level Analysis (especially for web frontend)
static_code_analysis.fortify.hla = true

# For java source version 1.8, 1.9, 10 or 11 (to use Java9+ set the execution node to java11) 
# Not implemented /!\
static_code_analysis.fortify.java_version = 1.8
static_code_analysis.fortify.failure_criteria = [fortify priority order]:critical AND [analysis type]:SCA

static_code_analysis.fortify.scan_central.enable = false
static_code_analysis.fortify.scan_central.contoller_url = http://scancentral-controller:8080/scancentral-ctrl
static_code_analysis.fortify.scan_central.wait_for_scan_complete = true
static_code_analysis.fortify.scan_central.pool = 00000000-0000-0000-0000-000000000002


# OWASP Dependency Check setup
software_composition_analysis.odc.enable = false
# Exclude some files or directories from the analysis
# Comma-separated workspace-relative paths
# Use ant-style paths to exclude all subdirectories (with **) and/or all files (with *)
# e.g. path/to/exclude/*.java,**/target/
software_composition_analysis.odc.exclude = 
software_composition_analysis.odc.failure_criteria = [fortify priority order]:critical AND [analysis type]:OWASP_DEPCHECK


# OWASP Dependency Track setup
software_composition_analysis.odt.enable = false
software_composition_analysis.odt.url = https://otrack.agile4security.io
software_composition_analysis.odt.failure_criteria = [fortify priority order]:critical AND [analysis type]:DEPENDENCY_TRACK

# Sonatype Nexus IQ setup
software_composition_analysis.nexus_iq.enable = false
software_composition_analysis.nexus_iq.url = https://iq.agile4security.io
software_composition_analysis.nexus_iq.stage = release
# Exclude some files or directories from the analysis
# Comma-separated workspace-relative paths
# Use ant-style paths to exclude all subdirectories (with **) and/or all files (with *)
# e.g. path/to/exclude/*.java,**/target/
software_composition_analysis.nexus_iq.exclude = 
software_composition_analysis.nexus_iq.failure_criteria = [fortify priority order]:critical AND [analysis type]:SONATYPE


code_quality_analysis.sonarqube.enable = false
code_quality_analysis.sonarqube.url = https://sonarq.agile4security.io
code_quality_analysis.sonarqube.failure_criteria = [fortify priority order]:critical AND [analysis type]:SONARQUBE


image_analysis.trivy.enable = true
image_analysis.trivy.failure_criteria = [fortify priority order]:critical AND [analysis type]:A4S_IO_TRIVY


dynamic_analysis.acunetix.enable = false
dynamic_analysis.acunetix.url = https://acunetix.agile4security.io
dynamic_analysis.acunetix.scan.type = full scan
dynamic_analysis.acunetix.scan.wait_for_scan_complete = true
dynamic_analysis.acunetix.target.address = https://app-to-scan.secenv.agile4security.io
dynamic_analysis.acunetix.target.description = Security Gate DAST Acunetix
dynamic_analysis.acunetix.target.criticality = high
dynamic_analysis.acunetix.failure_criteria = [fortify priority order]:critical AND [analysis type]:A4S_IO_ACUNETIX
